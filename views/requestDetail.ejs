
<section style="width: 80%; margin: 30px auto;">
	<div class="d-flex justify-content-center">
		<h1 class="text-center">품앗이 지원</h1>
	</div>
	<br/>
	<div>
		<button onclick="location.href='/request/list/1'" class="btn btn-outline-dark" type="button" style="border-radius: 20px;">목록으로</button>
	</div>

	<div class="cat-cards-container" >
	<% const cats = request.user.cats;
		for (let i = 0; i < cats.length; i++) { 
		const { name, age, gender, neutered, image, character } = cats[i]; %>

		<div class="col">
			<div class="card h-100">

				<div class="cat-card">
					<div class="imgContainer" style="background-image: url('<%= image %>');">
						<img src="" alt="">
					</div>

					<div class="two-column-container">
						<div class="left-column-container">
							<div class="cat-info-title" id="name">
							이름
							</div>
							<div class="cat-info-content">
							<%= name %>
							</div>
						</div>
						<div class="right-column-container">
							<div  class="cat-info-title" id="age">
							나이
							</div>
							<div  class="cat-info-content catAge">
							<%= age %>
							</div>
						</div>
					</div>
					<div class="two-column-container">
						<div class="left-column-container">
							<div class="cat-info-title" id="gender">
							성별
							</div>
							<div class="cat-info-content catGender">
							<%= gender %>
							</div>
						</div>
						<div class="right-column-container">
							<div  class="cat-info-title" id="neutered">
							중성화 여부
							</div>
							<div  class="cat-info-content catNeutered">
							<%= neutered %>
							</div>
						</div>
					</div>
					<div class="whole-column-container">
						<div class="cat-info-title" id="character">
							성격
						</div>
						<div class="cat-info-content catCharacter">
							<%= character %>.
						</div>
					</div>
				</div>
			</div>
		</div>
	<% } %>
	</div>

	<br/>

	<div class="request-detail-container" >
		<% 		
		const minutesAgo = (Date.now() - new Date(request.updated_at)) / 1000 / 60 - (60 * 9)
		let updated = ''
		if (minutesAgo < 60) {
			updated += parseInt(minutesAgo) + '분'
		} else if (minutesAgo / 60 <= 48) {
			updated += parseInt(minutesAgo / 60) + '시간'
		} else {
			updated += parseInt(minutesAgo / 60 / 24) + '일'
		} 
		let reserved_dates = ''
		if (request.reserved_end_date == request.reserved_begin_date) {
			reserved_dates = request.reserved_begin_date;
		} else {
			reserved_dates = request.reserved_begin_date + ' ~ ' + request.reserved_end_date;
		}
		%>

		<div class="col">
			<div class="card h-100">
				<div class="card-header">집사 정보</div>
				<div class="card-body">
					<p class="card-title">돌봄이 필요한 기간: <%= reserved_dates %></p>
					<p class="card-title">닉네임: <%= request.user.nickname %></p>
					<p class="card-title">동네: 
						<% if (user && user.address_certified) { %>
							<%= request.user.address_bname %>
						<% } else { %>
							동네를 인증해주세요!
						<% } %>
					</p>
				</div>
				</br>

				<div class="card-header">요청 및 상세 사항</div>
				<div class="card-body">
					<p><%= request.detail %></p>
				</div>
			</br>
			<% if (request.user.user_id != userId) { %>
				<button class="btn btn-outline-secondary w-100 btn-lg" type="button" id="modal_opne_btn" style="border-radius: 20px;">쪽지 보내기</button>
				<div id="modal">
   
					<div class="modal_content">
					  to <%= request.user.nickname %>
					  <div class="form-group">
						<label for="message">Message</label>
						<textarea class="form-control"id="inputContent" name="inputContent" ></textarea>
					  </div>
					  <button onclick="sendMessage(<%= request.user.user_id %>)" class="btn btn-outline-primary"
						type="button">submit</button>  
					   
						<button type="button" id="modal_close_btn">모달 창 닫기</button>
					   
					</div>
				   
					<div class="modal_layer"></div>
				  </div>
			<% } else { %>
				<div class="d-flex">
					<button onclick="updateRequestIsOngoing(<%= request.request_id %>)" class="btn btn-outline-success" type="button">마감하기</button>
					<button onclick="location.href='/request/modify/<%= request.request_id %>'" class="btn btn-outline-primary" type="button">수정</button>
					<button onclick="deleteRequest('<%= request.request_id %>')" class="btn btn-outline-secondary" type="button">삭제</button>
				</div>
			<% } %>
			</div>
		</div>
	</div>
</section>

<script>
	function sendMessage(sender_id) {
		const inputContent = $('#inputContent').val();
		if (!inputContent) {
		alert('내용을 입력해주세요.');
		} else {
		$.ajax({
			type: 'POST',
			url: '/messages',
			data: JSON.stringify({
				content: inputContent,
				recipient_id: Number(sender_id)
				}),
			success: function (response) {
			document.location.href = document.location.href;
			alert('전송이 완료되었습니다.');

			},
			beforeSend: function (xhrObj) {
			xhrObj.setRequestHeader("Content-Type", "application/json");
			xhrObj.setRequestHeader("Accept", "application/json");
			},
		})
		}
	}
	function check(a,b){
		console.log(a,b)
	}
	document.getElementById("modal_opne_btn").onclick = function() {
        document.getElementById("modal").style.display="block";
    }
   
    document.getElementById("modal_close_btn").onclick = function() {
        document.getElementById("modal").style.display="none";
    } 

	function updateRequestIsOngoing(id) {
		const check = confirm('신청서를 마감하시겠습니까? 되돌릴 수 없습니다');
		if (!check) {
			return;
		}
		$.ajax({
			type: 'PATCH', 
			url: `/requests/ongoing/${id}`,
			contentType: 'application/json; charset=UTF-8',
			data: JSON.stringify({
				is_ongoing: false,
			}),
			success: function(response) {
				location.href = '/request/list/1';
			},
			error: function(response) {
				console.log(response);
				console.log(response.responseJSON.message);
			}
		})
	}

	function deleteRequest(id) {
		const isReal = confirm('정말 삭제하시겠습니까? 되돌릴 수 없습니다');
		if (!isReal) {
			return 
		}
		$.ajax({
			type: 'DELETE',
			url: `/requests/${id}`,
			success: function (response) {
				alert('품앗이 게시글을 삭제하였습니다')
				location.href = '/request/list/1';
			},
			error: function (response) {
				console.log(response);
				console.log(response.responseJSON.message);
			}
		})
	}

</script>

<style>
	#modal {
  position:relative;
  display: none;
  width:100%;
  height:100%;
  z-index:1;
}
#modal h2 {
  margin:0;   
}

#modal button {
  display:inline-block;
  width:100px;
  margin-left:calc(100% - 100px - 10px);
}

#modal .modal_content {
  width:300px;
  margin:200px auto;
  padding:20px 10px;
  background:#fff;
  border:2px solid #666;
}

#modal .modal_layer {
  position:fixed;
  top:0;
  left:0;
  width:100%;
  height:100%;
  background:rgba(0, 0, 0, 0.5);
  z-index:-1;
} 
</style>
